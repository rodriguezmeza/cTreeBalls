####################################################
###          User definable stuff
#Monopole
NB_R = 128
R_MAX = 100.
#Logarithmic binning
N_LOGINT = 5
#Behavior options
DEFINEOPTIONS = -D_VERBOSE -D_LONGIDS
# Mar
#DEFINEOPTIONS += -D_HAVE_OMP #Comment this out if you don't have the OpenMP headers
#DEFINEOPTIONS += -D_LOGBIN
### End of user-definable stuff
####################################################

#Transform to inverse scales
I_R_MAX = $(shell echo "scale=5;1./$(R_MAX)" | bc)
LOG_R_MAX = $(shell echo "scale=9;l($(R_MAX))/l(10)" | bc -l)

# DEFINES for the OpenMP version
DEFINEFLAGSCPU = $(DEFINEOPTIONS)
DEFINEFLAGSCPU += -DNB_R=$(NB_R) -DI_R_MAX=$(I_R_MAX) -DLOG_R_MAX=$(LOG_R_MAX)
DEFINEFLAGSCPU += -DN_LOGINT=$(N_LOGINT)

# COMPILER AND OPTIONS
# Mar
#COMPCPU = gcc
#OPTCPU = -Wall -O3 -fopenmp $(DEFINEFLAGSCPU)
COMPCPU = clang
OPTCPU = -Wall -O3 $(DEFINEFLAGSCPU)

#INCLUDES AND LIBRARIES
INCLUDECOM = -I./src
LIBCPU = -lm

#.o FILES
#CUTE
DEF = define.o
COM = common_cute_box.o
PM = pm.o
TREE = tree.o
IO = io.o
NEIGH = neighbors.o
CORR = correlator.o
# Mar
MAIN = search_kdtree_cute_box.o
#MAIN = src/main.c
OFILES = $(DEF) $(COM) $(PM) $(TREE) $(IO) $(NEIGH) $(CORR) $(MAIN)

#
##FINAL GOAL
#EXE = CUTE_box
#
##RULES
#default : $(EXE)
##RULE TO MAKE .o's FROM .c's
#$(DEF) : src/define.c
#	$(COMPCPU) $(OPTCPU) -c $< -o $@ $(INCLUDECOM)
#$(COM) : src/common.c
#	$(COMPCPU) $(OPTCPU) -c $< -o $@ $(INCLUDECOM)
#$(CORR) : src/correlator.c
#	$(COMPCPU) $(OPTCPU) -c $< -o $@ $(INCLUDECOM)
#$(TREE) : src/tree.c
#	$(COMPCPU) $(OPTCPU) -c $< -o $@ $(INCLUDECOM)
#$(IO) : src/io.c
#	$(COMPCPU) $(OPTCPU) -c $< -o $@ $(INCLUDECOM)
#$(NEIGH) : src/neighbors.c
#	$(COMPCPU) $(OPTCPU) -c $< -o $@ $(INCLUDECOM)
#$(PM) : src/pm.c
#	$(COMPCPU) $(OPTCPU) -c $< -o $@ $(INCLUDECOM)
#
##RULES TO MAKE THE FINAL EXECUTABLES
#$(EXE) : $(OFILES)
#	$(COMPCPU) $(OPTCPU) $(OFILES) -o $(EXE) $(INCLUDECOM) $(LIBCPU)
#
##CLEANING RULES
#clean :
#	rm -f ./src/*.o
#
#cleaner :
#	rm -f ./src/*.o ./src/*~ *~ CUTE_box
